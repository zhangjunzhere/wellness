package com.asus.wellness.dbhelper;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.asus.wellness.dbhelper.DeviceDao;
import com.asus.wellness.dbhelper.ProfileDao;
import com.asus.wellness.dbhelper.Activity_stateDao;
import com.asus.wellness.dbhelper.EcgDao;
import com.asus.wellness.dbhelper.Step_goalDao;
import com.asus.wellness.dbhelper.Location_changeDao;
import com.asus.wellness.dbhelper.CoachDao;
import com.asus.wellness.dbhelper.SleepDao;
import com.asus.wellness.utils.Utility;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1102): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1102;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        DeviceDao.createTable(db, ifNotExists);
        ProfileDao.createTable(db, ifNotExists);
        Activity_stateDao.createTable(db, ifNotExists);
        EcgDao.createTable(db, ifNotExists);
        Step_goalDao.createTable(db, ifNotExists);
        Location_changeDao.createTable(db, ifNotExists);
        CoachDao.createTable(db, ifNotExists);
        SleepDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        DeviceDao.dropTable(db, ifExists);
        ProfileDao.dropTable(db, ifExists);
        Activity_stateDao.dropTable(db, ifExists);
        EcgDao.dropTable(db, ifExists);
        Step_goalDao.dropTable(db, ifExists);
        Location_changeDao.dropTable(db, ifExists);
        CoachDao.dropTable(db, ifExists);
        SleepDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
  
            MigrationHelper.getInstance().migrate(db, Activity_stateDao.class, EcgDao.class, ProfileDao.class, Step_goalDao.class, DeviceDao.class, Location_changeDao.class,SleepDao.class);
            long todayMidNightTime = Utility.getMidnightMilles(System.currentTimeMillis());
            String sqlDelete = "DELETE FROM activity_state where start>=?";
            db.execSQL(sqlDelete,new Object[]{todayMidNightTime});
            String sqlInsert = "UPDATE device set stepsynctime =? where stepsynctime>?";
            db.execSQL(sqlInsert,new Object[]{todayMidNightTime, todayMidNightTime});
            Log.i("smile", "sqlDelete: " + sqlDelete);
            Log.i("smile","sqlInsert: "+sqlInsert);
        }

        @Override
        public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "onDowngrade schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            MigrationHelper.getInstance().migrate(db, Activity_stateDao.class, EcgDao.class, ProfileDao.class, Step_goalDao.class, DeviceDao.class, Location_changeDao.class,SleepDao.class);
            
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(DeviceDao.class);
        registerDaoClass(ProfileDao.class);
        registerDaoClass(Activity_stateDao.class);
        registerDaoClass(EcgDao.class);
        registerDaoClass(Step_goalDao.class);
        registerDaoClass(Location_changeDao.class);
        registerDaoClass(CoachDao.class);
        registerDaoClass(SleepDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.1'

    defaultConfig {
        applicationId "com.asus.wellness"
        minSdkVersion 20
        targetSdkVersion 23
        versionCode java.lang.Integer.parseInt(project.VERSION_CODE) //150702002  //define in AndroidManifest.xml
        versionName project.VERSION_NAME //"2.0.0.150720"
        manifestPlaceholders = [ appIcon: "@mipmap/asus_icon_app_wellness" , sleepIcon:"@mipmap/asus_wellness_sleep_icon"]
      //  android:versionCode="150701402"
     //   android:versionName="2.0.0.150714"

    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    signingConfigs {

        release {
            storeFile file("../key/release.keystore")
            storePassword "123456"
            keyAlias "release"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                     
                        def fileName = "wear_${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"  //_${variant.productFlavors[0].name}
                      //  output.outputFile = new File(outputFile.parent, fileName)
                        output.outputFile = new File(projectDir.parent+"/alloutput", fileName)
                    }
                }
            }
          }

        debug {
            minifyEnabled false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                     
                        def fileName = "wear_${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"  //_${variant.productFlavors[0].name}
                        //  output.outputFile = new File(outputFile.parent, fileName)
                        output.outputFile = new File(projectDir.parent+"/alloutput", fileName)
                    }
                }
            }
        }
        }
    productFlavors {
        beta {
            manifestPlaceholders = [appIcon: "@mipmap/asus_wellness_icon"]
           // apktype =  'beta'
        }
        real {
            manifestPlaceholders = [appIcon: "@mipmap/asus_icon_app_wellness"]
          //  apktype = 'release'
        }
    }
    productFlavors.all { flavor ->
      //  flavor.manifestPlaceholders = [appIcon: name]
       // flavor.fileend = fileend

    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.android.support:wearable:1.3.0'
    compile files('libs/eventbus-2.4.0.jar')
    //  compile files('libs/gson-2.3.1.jar')
    compile files('libs/nineoldandroids-2.4.0.jar')
    compile project(':viewPagerIndicator')
    compile project(':smartgraph2')
    compile project(':EcgManager')
    compile project(':sharedata')
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.google.android.gms:play-services-wearable:7.3.0'
    compile 'com.android.support:support-v4:23.1.0'
    compile 'com.google.android.gms:play-services-fitness:7.3.0'
    compile project(':autofit_textview')
}
